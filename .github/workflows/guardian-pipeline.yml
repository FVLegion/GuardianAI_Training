name: Run Guardian AI Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:    # Manual trigger option

jobs:
  run_guardian_pipeline:
    runs-on: [self-hosted, guardian, gpu]

    env:  # Global environment variables for all steps
      CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
      CLEARML_API_SECRET_KEY: ${{ secrets.CLEARML_API_SECRET_KEY }}
      CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Environment
        shell: cmd
        run: |
          echo "Runner: %RUNNER_NAME%"
          echo "OS: Windows"
          echo "Python version:"
          python --version
          echo "Working directory:"
          cd
          echo "CLEARML_API_HOST=%CLEARML_API_HOST%"

      - name: Install dependencies
        shell: cmd
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Guardian AI Pipeline
        shell: cmd
        run: python Guardian_pipeline.py

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: training-results-${{ github.run_number }}
          path: |
            *.png
            *.pth
            evaluation_outputs/
          retention-days: 5

      - name: Pipeline Summary
        if: always()
        shell: cmd
        run: |
          echo ## Guardian AI Pipeline Summary >> %GITHUB_STEP_SUMMARY%
          echo - **Status**: ${{ job.status }} >> %GITHUB_STEP_SUMMARY%
          echo - **Runner**: %COMPUTERNAME% >> %GITHUB_STEP_SUMMARY%
          echo - **Trigger**: ${{ github.event_name }} >> %GITHUB_STEP_SUMMARY%
          echo - **Run #**: ${{ github.run_number }} >> %GITHUB_STEP_SUMMARY% 