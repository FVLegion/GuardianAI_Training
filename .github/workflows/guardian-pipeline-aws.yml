name: Run GuardianAi pipeline on self-hosted aws runner

on:
  push:
    branches:
      - main

jobs:
  run-pipeline:
    runs-on: [self-hosted, Linux, X64, guardian, gpu]   # must match the labels you set
    timeout-minutes: 500 # 8.33 hours
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx
          sudo apt-get install -y libglib2.0-0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup dataset symlink
        run: |
          echo "üîó Setting up dataset symlink for self-hosted runner..."
          
          # Check if absolute dataset path exists
          if [ -d "/home/sagemaker-user/data/Guardian_Dataset" ]; then
            echo "‚úÖ Found dataset at absolute path: /home/sagemaker-user/data/Guardian_Dataset"
            
            # Create data directory in workspace
            mkdir -p data
            
            # Create symlink if it doesn't exist
            if [ ! -L "data/Guardian_Dataset" ]; then
              ln -s /home/sagemaker-user/data/Guardian_Dataset data/Guardian_Dataset
              echo "‚úÖ Created symlink: data/Guardian_Dataset -> /home/sagemaker-user/data/Guardian_Dataset"
            else
              echo "‚úÖ Symlink already exists"
            fi
            
            # Verify symlink
            ls -la data/
            echo "üìä Dataset structure:"
            ls -la data/Guardian_Dataset/ | head -10
            
          else
            echo "‚ö†Ô∏è  Absolute dataset path not found. Pipeline will need to download the dataset."
          fi

      - name: Verify ClearML Configuration
        env:
          CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
          CLEARML_API_SECRET_KEY: ${{ secrets.CLEARML_API_SECRET_KEY }}
          CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}
        run: |
          echo "üîç Checking ClearML configuration..."
          echo "CLEARML_API_HOST: ${CLEARML_API_HOST:-'Not Set'}"
          echo "CLEARML_API_ACCESS_KEY: ${CLEARML_API_ACCESS_KEY:+Set}"
          echo "CLEARML_API_SECRET_KEY: ${CLEARML_API_SECRET_KEY:+Set}"
          
          echo "üß™ Testing ClearML connection..."
          python -c "
          try:
              from clearml import Task
              print('‚úÖ ClearML import successful')
              task = Task.init(project_name='test', task_name='connection_test', auto_connect_frameworks=False)
              print('‚úÖ ClearML connection successful')
              task.close()
          except Exception as e:
              print(f'‚ùå ClearML connection failed: {e}')
              print('This may be expected if credentials are not configured')
          "

      - name: Run ClearML pipeline
        env:
          CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY }}
          CLEARML_API_SECRET_KEY: ${{ secrets.CLEARML_API_SECRET_KEY }}
          CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST }}
        run: |
          python Guardian_pipeline_github.py

  